{"version":3,"sources":["utils.js","index.js"],"names":["randInt","min","max","Math","floor","random","getBounds","image","x","y","top","bottom","height","left","right","width","intersects","otherImage","otherX","otherY","margin","bounds","otherBounds","images","number","count","push","src","concat","title","subtitle","generateImages","GRID_SIZE","ZOOM_SPEED_WHEEL","INITIAL_ZOOM","MIN_ZOOM","MAX_ZOOM","MOVE_SPEED","generatePositions","positions","forEach","theta","radius","hasIntersection","PI","cos","sin","i","length","position","preventDefault","e","document","body","addEventListener","passive","render","react_default","a","createElement","zoomLevel","useRef","_useSpring","useSpring","xys","config","wobbly","_useSpring2","Object","slicedToArray","propsMap","setPropsMap","initialPositions","_useSprings","useSprings","xy","display","_useSprings2","propsImages","setImages","bind","useGesture","onDrag","_ref","_ref$vxvy","vxvy","vx","vy","current","onPinch","_ref2","_ref2$previous","previous","previousDistance","_ref2$da","da","distance","zoomSpeed","pow","clamp","onWheel","_ref3","_ref3$delta","delta","yDelta","assign","id","className","onClick","web","div","style","transform","interpolate","s","map","_ref4","key","backgroundImage","fontSize","getElementById"],"mappings":"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","file":"static/js/main.c0ef9351.chunk.js","sourcesContent":["export function randInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport function getBounds(image, x, y) {\n    return {\n        top: y,\n        bottom: y + image.height,\n        left: x,\n        right: x + image.width,\n    };\n}\n\nexport function intersects(image, x, y, otherImage, otherX, otherY, margin) {\n    const bounds = getBounds(image, x, y);\n    const otherBounds = getBounds(otherImage, otherX, otherY);\n    return (\n        bounds.left - margin < otherBounds.right &&\n        bounds.right + margin > otherBounds.left &&\n        bounds.top - margin < otherBounds.bottom &&\n        bounds.bottom + margin > otherBounds.top\n    );\n}\n","import {render} from \"react-dom\";\nimport React, {useRef} from \"react\";\nimport {useSpring, useSprings, animated, config} from \"react-spring\";\nimport {useGesture} from \"react-use-gesture\";\nimport {clamp} from \"lodash-es\";\n\nimport {randInt, intersects} from \"./utils\";\nimport \"./styles.css\";\n\nfunction generateImages(number) {\n    let count = 0;\n    const images = [];\n    while (count < number) {\n        count = count + 1;\n        const width = randInt(800, 1200);\n        const height = randInt(600, 1200);\n\n        images.push({\n            width: width,\n            height: height,\n            src: `https://placekitten.com/${width}/${height}/`,\n            title: \"Nom\",\n            subtitle: \"Client\",\n        });\n    }\n    return images;\n}\n\nconst images = generateImages(10);\n\nconst GRID_SIZE = 200;\nconst ZOOM_SPEED_WHEEL = 1.2;\nconst INITIAL_ZOOM = 0.4;\nconst MIN_ZOOM = 0.05;\nconst MAX_ZOOM = 2;\nconst MOVE_SPEED = 20;\n\nfunction generatePositions(images) {\n    const positions = [];\n\n    images.forEach(image => {\n        let x = randInt(-50, 50) * GRID_SIZE;\n        let y = randInt(-50, 50) * GRID_SIZE;\n        let theta = 0;\n        let radius = 0;\n\n        let hasIntersection = true;\n\n        while (hasIntersection) {\n            hasIntersection = false;\n            theta += (randInt(10, 25) / 180) * Math.PI;\n            if (theta > Math.PI * 2) {\n                radius += 50;\n            }\n            x = Math.floor(Math.cos(theta) * radius);\n            y = Math.floor(Math.sin(theta) * radius);\n            for (let i = 0; i < positions.length; i++) {\n                let position = positions[i];\n                hasIntersection =\n                    hasIntersection ||\n                    intersects(image, x, y, images[i], position[0], position[1], 50);\n            }\n        }\n\n        positions.push([x, y]);\n    });\n    return positions;\n}\n\nfunction Viewpager() {\n    const zoomLevel = useRef(INITIAL_ZOOM);\n    const position = useRef({x: 0, y: 0});\n\n    const [propsMap, setPropsMap] = useSpring(\n        () => {\n            return {xys: [0, 0, INITIAL_ZOOM]}; // x, y, scale\n        },\n        {config: config.wobbly}\n    );\n\n    const initialPositions = generatePositions(images);\n\n    const [propsImages, setImages] = useSprings(images.length, i => ({\n        xy: initialPositions[i],\n        display: \"block\",\n    }));\n\n    const bind = useGesture({\n        onDrag: ({vxvy: [vx, vy]}) => {\n            position.current = {\n                x: (vx * MOVE_SPEED) / zoomLevel.current + position.current.x,\n                y: (vy * MOVE_SPEED) / zoomLevel.current + position.current.y,\n            };\n            setPropsMap({xys: [position.current.x, position.current.y, zoomLevel.current]});\n        },\n        onPinch: ({previous: [previousDistance, previousAngle], da: [distance, angle]}) => {\n            const zoomSpeed = Math.pow(distance / previousDistance, 2);\n            zoomLevel.current = clamp(zoomLevel.current * zoomSpeed, MIN_ZOOM, MAX_ZOOM);\n            setPropsMap({xys: [position.current.x, position.current.y, zoomLevel.current]});\n        },\n        onWheel: ({delta: [xDelta, yDelta]}) => {\n            zoomLevel.current = clamp(\n                yDelta < 0\n                    ? ZOOM_SPEED_WHEEL * zoomLevel.current\n                    : zoomLevel.current / ZOOM_SPEED_WHEEL,\n                MIN_ZOOM,\n                MAX_ZOOM\n            );\n            setPropsMap({xys: [position.current.x, position.current.y, zoomLevel.current]});\n        },\n    });\n\n    return (\n        <div {...bind()} id=\"container\" className=\"touch-drag touch-zoom\">\n            <div\n                id=\"shuffle\"\n                className=\"chrome\"\n                onClick={() => {\n                    const positions = generatePositions(images);\n                    setImages(i => {\n                        return {\n                            xy: positions[i],\n                            display: \"block\",\n                        };\n                    });\n                }}\n            >\n                shuffle\n            </div>\n            <animated.div\n                style={{\n                    transform: propsMap.xys.interpolate(\n                        (x, y, s) => `scale(${s}) translate3d(${x}px,${y}px,0)`\n                    ),\n                }}\n                id=\"map\"\n            >\n                {propsImages.map(({xy, display}, i) => (\n                    <animated.div\n                        className=\"image-container\"\n                        key={i}\n                        style={{\n                            display,\n                            transform: xy.interpolate((x, y) => `translate3d(${x}px,${y}px,0)`),\n                        }}\n                    >\n                        <animated.div\n                            className=\"image\"\n                            style={{\n                                width: `${images[i].width}px`,\n                                height: `${images[i].height}px`,\n                                backgroundImage: `url(${images[i].src})`,\n                                display: propsMap.xys.interpolate((x, y, s) =>\n                                    s > 0.1 ? \"inherit\" : \"none\"\n                                ),\n                            }}\n                        />\n                        <animated.div\n                            className=\"legend\"\n                            style={{\n                                fontSize: propsMap.xys.interpolate((x, y, s) => `${25 / s}px`),\n                            }}\n                        >\n                            {images[i].title} | {images[i].subtitle}\n                        </animated.div>\n                    </animated.div>\n                ))}\n            </animated.div>\n        </div>\n    );\n}\n\nfunction preventDefault(e) {\n    e.preventDefault();\n}\n\nfunction disableScroll() {\n    document.body.addEventListener(\"touchmove\", preventDefault, {passive: false});\n}\n\ndisableScroll();\n\nrender(<Viewpager />, document.getElementById(\"root\"));\n"],"sourceRoot":""}