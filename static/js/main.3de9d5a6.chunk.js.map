{"version":3,"sources":["utils.js","index.js"],"names":["randInt","min","max","Math","floor","random","getBounds","image","x","y","top","bottom","height","left","right","width","intersects","otherImage","otherX","otherY","margin","bounds","otherBounds","images","number","count","push","src","concat","client","year","category","project","generateImages","GRID_SIZE","ZOOM_SPEED_WHEEL","INITIAL_ZOOM","MIN_ZOOM","MAX_ZOOM","MOVE_SPEED","MARGIN","generatePositions","positions","forEach","theta","radius","hasIntersection","PI","cos","sin","i","length","position","MIDDLE","window","innerWidth","innerHeight","getImagesParams","imagePositions","mapPosition","zoomLevel","xys","current","LegendSpan","_ref","cutoff","text","react_default","a","createElement","web","span","style","display","interpolate","s","preventDefault","e","document","body","addEventListener","passive","render","useRef","_useSprings","useSprings","_useSprings2","Object","slicedToArray","propsImages","setImages","bind","useGesture","onDrag","_ref2","_ref2$vxvy","vxvy","vx","vy","onPinch","_ref3","_ref3$previous","previous","previousDistance","_ref3$da","da","distance","zoomSpeed","pow","clamp","onWheel","_ref4","_ref4$delta","delta","yDelta","assign","id","className","onClick","div","map","_ref5","key","transform","backgroundImage","getElementById"],"mappings":"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","file":"static/js/main.3de9d5a6.chunk.js","sourcesContent":["export function randInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport function getBounds(image, x, y) {\n    return {\n        top: y,\n        bottom: y + image.height,\n        left: x,\n        right: x + image.width,\n    };\n}\n\nexport function intersects(image, x, y, otherImage, otherX, otherY, margin) {\n    const bounds = getBounds(image, x, y);\n    const otherBounds = getBounds(otherImage, otherX, otherY);\n    return (\n        bounds.left - margin < otherBounds.right &&\n        bounds.right + margin > otherBounds.left &&\n        bounds.top - margin < otherBounds.bottom &&\n        bounds.bottom + margin > otherBounds.top\n    );\n}\n","import {render} from \"react-dom\";\nimport React, {useRef} from \"react\";\nimport {useSprings, animated} from \"react-spring\";\nimport {useGesture} from \"react-use-gesture\";\nimport {clamp} from \"lodash-es\";\n\nimport {randInt, intersects} from \"./utils\";\nimport \"./styles.css\";\n\nfunction generateImages(number) {\n    let count = 0;\n    const images = [];\n    while (count < number) {\n        count = count + 1;\n        const width = randInt(800, 1200);\n        const height = randInt(600, 1200);\n\n        images.push({\n            width: width,\n            height: height,\n            src: `https://placekitten.com/${width}/${height}/`,\n            client: \"Vinci\",\n            year: \"2019\",\n            category: \"Facilitation graphique\",\n            project: \"RÃ©union prospective pour l'avenir des autoroutes\",\n        });\n    }\n    return images;\n}\n\nconst images = generateImages(10);\n\nconst GRID_SIZE = 300;\nconst ZOOM_SPEED_WHEEL = 1.05;\nconst INITIAL_ZOOM = 0.4;\nconst MIN_ZOOM = 0.05;\nconst MAX_ZOOM = 2;\nconst MOVE_SPEED = 20;\nconst MARGIN = 150;\n\nfunction generatePositions(images) {\n    const positions = [];\n\n    images.forEach(image => {\n        let x = randInt(-50, 50) * GRID_SIZE;\n        let y = randInt(-50, 50) * GRID_SIZE;\n        let theta = 0;\n        let radius = 0;\n\n        let hasIntersection = true;\n\n        while (hasIntersection) {\n            hasIntersection = false;\n            theta += (randInt(10, 25) / 180) * Math.PI;\n            if (theta > Math.PI * 2) {\n                radius += 50;\n            }\n            x = Math.floor(Math.cos(theta) * radius);\n            y = Math.floor(Math.sin(theta) * radius);\n            for (let i = 0; i < positions.length; i++) {\n                let position = positions[i];\n                hasIntersection =\n                    hasIntersection ||\n                    intersects(image, x, y, images[i], position[0], position[1], MARGIN);\n            }\n        }\n\n        positions.push([x, y]);\n    });\n    return positions;\n}\n\nconst MIDDLE = {x: window.innerWidth / 2, y: window.innerHeight / 2};\n\nfunction getImagesParams(imagePositions, mapPosition, zoomLevel) {\n    return i => {\n        return {\n            xys: [\n                MIDDLE.x +\n                    (imagePositions.current[i][0] + mapPosition.current.x) * zoomLevel.current,\n                MIDDLE.y +\n                    (imagePositions.current[i][1] + mapPosition.current.y) * zoomLevel.current,\n                zoomLevel.current,\n            ],\n        };\n    };\n}\n\nfunction LegendSpan({xys, cutoff, text}) {\n    return (\n        <animated.span\n            style={{\n                display: xys.interpolate((x, y, s) => (s > cutoff ? \"inline\" : \"none\")),\n            }}\n        >\n            {\" | \"}\n            {text}\n        </animated.span>\n    );\n}\n\nfunction Viewpager() {\n    const zoomLevel = useRef(INITIAL_ZOOM);\n    const mapPosition = useRef(MIDDLE);\n    const imagePositions = useRef(generatePositions(images));\n\n    const [propsImages, setImages] = useSprings(images.length, i => ({\n        xys: [imagePositions.current[i][0], imagePositions.current[i][1], INITIAL_ZOOM],\n        display: \"block\",\n    }));\n\n    const bind = useGesture({\n        onDrag: ({vxvy: [vx, vy]}) => {\n            mapPosition.current = {\n                x: (vx * MOVE_SPEED) / zoomLevel.current + mapPosition.current.x,\n                y: (vy * MOVE_SPEED) / zoomLevel.current + mapPosition.current.y,\n            };\n            setImages(getImagesParams(imagePositions, mapPosition, zoomLevel));\n        },\n        onPinch: ({previous: [previousDistance, previousAngle], da: [distance, angle]}) => {\n            const zoomSpeed = Math.pow(distance / previousDistance, 2);\n            zoomLevel.current = clamp(zoomLevel.current * zoomSpeed, MIN_ZOOM, MAX_ZOOM);\n            setImages(getImagesParams(imagePositions, mapPosition, zoomLevel));\n        },\n        onWheel: ({delta: [xDelta, yDelta]}) => {\n            zoomLevel.current = clamp(\n                yDelta < 0\n                    ? ZOOM_SPEED_WHEEL * zoomLevel.current\n                    : zoomLevel.current / ZOOM_SPEED_WHEEL,\n                MIN_ZOOM,\n                MAX_ZOOM\n            );\n            setImages(getImagesParams(imagePositions, mapPosition, zoomLevel));\n        },\n    });\n\n    return (\n        <div {...bind()} id=\"container\" className=\"touch-drag touch-zoom\">\n            <div\n                id=\"shuffle\"\n                className=\"chrome\"\n                onClick={() => {\n                    imagePositions.current = generatePositions(images);\n                    setImages(getImagesParams(imagePositions, mapPosition, zoomLevel));\n                }}\n            >\n                shuffle\n            </div>\n            <animated.div id=\"map\">\n                {propsImages.map(({xys, display}, i) => (\n                    <animated.div\n                        className=\"image-container\"\n                        key={i}\n                        style={{\n                            display,\n                            transform: xys.interpolate((x, y, s) => `translate3d(${x}px,${y}px,0`),\n                        }}\n                    >\n                        <animated.div\n                            className=\"image\"\n                            style={{\n                                width: xys.interpolate((x, y, s) => `${images[i].width * s}px`),\n                                height: xys.interpolate((x, y, s) => `${images[i].height * s}px`),\n                                backgroundImage: `url(${images[i].src})`,\n                                display: xys.interpolate((x, y, s) =>\n                                    s > 0.15 ? \"inherit\" : \"none\"\n                                ),\n                            }}\n                        />\n                        <animated.div className=\"legend\">\n                            {images[i].client}\n                            <LegendSpan xys={xys} cutoff={0.15} text={images[i].year} />\n                            <LegendSpan xys={xys} cutoff={0.35} text={images[i].category} />\n                            <LegendSpan xys={xys} cutoff={0.6} text={images[i].project} />\n                        </animated.div>\n                    </animated.div>\n                ))}\n            </animated.div>\n        </div>\n    );\n}\n\nfunction preventDefault(e) {\n    e.preventDefault();\n}\n\nfunction disableScroll() {\n    document.body.addEventListener(\"touchmove\", preventDefault, {passive: false});\n}\n\ndisableScroll();\n\nrender(<Viewpager />, document.getElementById(\"root\"));\n"],"sourceRoot":""}