{"version":3,"sources":["utils.js","index.js"],"names":["randInt","min","max","Math","floor","random","getBounds","image","x","y","top","bottom","height","left","right","width","intersects","otherImage","otherX","otherY","margin","bounds","otherBounds","images","number","count","push","src","concat","title","subtitle","generateImages","GRID_SIZE","ZOOM_SPEED_WHEEL","INITIAL_ZOOM","MIN_ZOOM","MAX_ZOOM","MOVE_SPEED","generatePositions","positions","forEach","theta","radius","hasIntersection","PI","cos","sin","i","length","position","MIDDLE","window","innerWidth","innerHeight","preventDefault","e","document","body","addEventListener","passive","render","react_default","a","createElement","zoomLevel","useRef","mapPosition","imagePositions","_useSprings","useSprings","xys","current","display","_useSprings2","Object","slicedToArray","propsImages","setImages","console","warn","bind","useGesture","onDrag","_ref","_ref$vxvy","vxvy","vx","vy","onPinch","_ref2","_ref2$previous","previous","previousDistance","_ref2$da","da","distance","zoomSpeed","pow","clamp","onWheel","_ref3","_ref3$delta","delta","yDelta","assign","id","className","onClick","web","div","map","_ref4","key","style","transform","interpolate","s","backgroundImage","getElementById"],"mappings":"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","file":"static/js/main.9c9789c6.chunk.js","sourcesContent":["export function randInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport function getBounds(image, x, y) {\n    return {\n        top: y,\n        bottom: y + image.height,\n        left: x,\n        right: x + image.width,\n    };\n}\n\nexport function intersects(image, x, y, otherImage, otherX, otherY, margin) {\n    const bounds = getBounds(image, x, y);\n    const otherBounds = getBounds(otherImage, otherX, otherY);\n    return (\n        bounds.left - margin < otherBounds.right &&\n        bounds.right + margin > otherBounds.left &&\n        bounds.top - margin < otherBounds.bottom &&\n        bounds.bottom + margin > otherBounds.top\n    );\n}\n","import {render} from \"react-dom\";\nimport React, {useRef} from \"react\";\nimport {useSpring, useSprings, animated, config} from \"react-spring\";\nimport {useGesture} from \"react-use-gesture\";\nimport {clamp} from \"lodash-es\";\n\nimport {randInt, intersects} from \"./utils\";\nimport \"./styles.css\";\n\nfunction generateImages(number) {\n    let count = 0;\n    const images = [];\n    while (count < number) {\n        count = count + 1;\n        const width = randInt(800, 1200);\n        const height = randInt(600, 1200);\n\n        images.push({\n            width: width,\n            height: height,\n            src: `https://placekitten.com/${width}/${height}/`,\n            title: \"Nom\",\n            subtitle: \"Client\",\n        });\n    }\n    return images;\n}\n\nconst images = generateImages(10);\n\nconst GRID_SIZE = 200;\nconst ZOOM_SPEED_WHEEL = 1.2;\nconst INITIAL_ZOOM = 0.4;\nconst MIN_ZOOM = 0.05;\nconst MAX_ZOOM = 2;\nconst MOVE_SPEED = 20;\n\nfunction generatePositions(images) {\n    const positions = [];\n\n    images.forEach(image => {\n        let x = randInt(-50, 50) * GRID_SIZE;\n        let y = randInt(-50, 50) * GRID_SIZE;\n        let theta = 0;\n        let radius = 0;\n\n        let hasIntersection = true;\n\n        while (hasIntersection) {\n            hasIntersection = false;\n            theta += (randInt(10, 25) / 180) * Math.PI;\n            if (theta > Math.PI * 2) {\n                radius += 50;\n            }\n            x = Math.floor(Math.cos(theta) * radius);\n            y = Math.floor(Math.sin(theta) * radius);\n            for (let i = 0; i < positions.length; i++) {\n                let position = positions[i];\n                hasIntersection =\n                    hasIntersection ||\n                    intersects(image, x, y, images[i], position[0], position[1], 50);\n            }\n        }\n\n        positions.push([x, y]);\n    });\n    return positions;\n}\n\nconst MIDDLE = {x: window.innerWidth / 2, y: window.innerHeight / 2};\n\nfunction Viewpager() {\n    const zoomLevel = useRef(INITIAL_ZOOM);\n    const mapPosition = useRef(MIDDLE);\n    const imagePositions = useRef(generatePositions(images));\n\n    const [propsImages, setImages] = useSprings(images.length, i => ({\n        xys: [imagePositions.current[i][0], imagePositions.current[i][1], INITIAL_ZOOM],\n        display: \"block\",\n    }));\n\n    console.warn(mapPosition);\n\n    const bind = useGesture({\n        onDrag: ({vxvy: [vx, vy]}) => {\n            mapPosition.current = {\n                x: (vx * MOVE_SPEED) / zoomLevel.current + mapPosition.current.x,\n                y: (vy * MOVE_SPEED) / zoomLevel.current + mapPosition.current.y,\n            };\n            setImages(i => {\n                return {\n                    xys: [\n                        MIDDLE.x +\n                            (imagePositions.current[i][0] + mapPosition.current.x) *\n                                zoomLevel.current,\n                        MIDDLE.y +\n                            (imagePositions.current[i][1] + mapPosition.current.y) *\n                                zoomLevel.current,\n                        zoomLevel.current,\n                    ],\n                };\n            });\n        },\n        onPinch: ({previous: [previousDistance, previousAngle], da: [distance, angle]}) => {\n            const zoomSpeed = Math.pow(distance / previousDistance, 2);\n            zoomLevel.current = clamp(zoomLevel.current * zoomSpeed, MIN_ZOOM, MAX_ZOOM);\n            setImages(i => {\n                return {\n                    xys: [\n                        MIDDLE.x +\n                            (imagePositions.current[i][0] + mapPosition.current.x) *\n                                zoomLevel.current,\n                        MIDDLE.y +\n                            (imagePositions.current[i][1] + mapPosition.current.y) *\n                                zoomLevel.current,\n                        zoomLevel.current,\n                    ],\n                };\n            });\n        },\n        onWheel: ({delta: [xDelta, yDelta]}) => {\n            zoomLevel.current = clamp(\n                yDelta < 0\n                    ? ZOOM_SPEED_WHEEL * zoomLevel.current\n                    : zoomLevel.current / ZOOM_SPEED_WHEEL,\n                MIN_ZOOM,\n                MAX_ZOOM\n            );\n            setImages(i => {\n                return {\n                    xys: [\n                        MIDDLE.x +\n                            (imagePositions.current[i][0] + mapPosition.current.x) *\n                                zoomLevel.current,\n                        MIDDLE.y +\n                            (imagePositions.current[i][1] + mapPosition.current.y) *\n                                zoomLevel.current,\n                        zoomLevel.current,\n                    ],\n                };\n            });\n        },\n    });\n\n    return (\n        <div {...bind()} id=\"container\" className=\"touch-drag touch-zoom\">\n            <div\n                id=\"shuffle\"\n                className=\"chrome\"\n                onClick={() => {\n                    imagePositions.current = generatePositions(images);\n                    setImages(i => {\n                        return {\n                            xys: [\n                                (imagePositions.current[i][0] + mapPosition.current.x) *\n                                    zoomLevel.current,\n                                (imagePositions.current[i][1] + mapPosition.current.y) *\n                                    zoomLevel.current,\n                                zoomLevel.current,\n                            ],\n                        };\n                    });\n                }}\n            >\n                shuffle\n            </div>\n            <animated.div id=\"map\">\n                {propsImages.map(({xys, display}, i) => (\n                    <animated.div\n                        className=\"image-container\"\n                        key={i}\n                        style={{\n                            display,\n                            transform: xys.interpolate((x, y, s) => `translate3d(${x}px,${y}px,0`),\n                        }}\n                    >\n                        <animated.div\n                            className=\"image\"\n                            style={{\n                                width: xys.interpolate((x, y, s) => `${images[i].width * s}px`),\n                                height: xys.interpolate((x, y, s) => `${images[i].height * s}px`),\n                                backgroundImage: `url(${images[i].src})`,\n                                display: xys.interpolate((x, y, s) =>\n                                    s > 0.1 ? \"inherit\" : \"none\"\n                                ),\n                            }}\n                        />\n                        <animated.div\n                            className=\"legend\"\n                            style={\n                                {\n                                    // fontSize: propsMap.xys.interpolate((x, y, s) => `${25 / s}px`),\n                                }\n                            }\n                        >\n                            {images[i].title} | {images[i].subtitle}\n                        </animated.div>\n                    </animated.div>\n                ))}\n            </animated.div>\n        </div>\n    );\n}\n\nfunction preventDefault(e) {\n    e.preventDefault();\n}\n\nfunction disableScroll() {\n    document.body.addEventListener(\"touchmove\", preventDefault, {passive: false});\n}\n\ndisableScroll();\n\nrender(<Viewpager />, document.getElementById(\"root\"));\n"],"sourceRoot":""}